
parameters:
  

stages:
  - stage: windows
    displayName: Build Windows
    jobs:
    - template: steps/build-windows.yml
      parameters:
        name: win
        displayName: Build Windows Phase
        vmImage: $(win2019VmImage)
        msbuildExtraArguments: '/nowarn:VSX1000'
        buildConfiguration: $(DefaultBuildConfiguration)
        buildPlatform: $(DefaultBuildPlatform)
        provisionatorPath : 'provisioning/provisioning.csx'
    - job: nuget_pack
      dependsOn:
        - win
      displayName: Nuget Phase
      condition: succeeded()
      pool:
        name: $(win2019VmImage)
      variables:
        FormsIdAppend: ''
        buildConfiguration: $(DefaultBuildConfiguration)
        nugetPackageVersion : $[ dependencies.win.outputs['debug.winbuild.xamarinformspackageversion'] ]
      steps:
        - template: steps/build-nuget.yml

  - stage: android
    displayName: Build Android
    jobs:   
      - template: steps/build-android.yml
        parameters:
          vmImage: $(macOSVmImage)
          provisionatorPath : 'provisioning/provisioning.csx'

      # - template: steps/build-android.yml
      #   parameters:
      #     name: android_preappcompact
      #     displayName: Build Android [Pre-AppCompat]
      #     vmImage: $(macOSVmImage)
      #     targetFolder: Xamarin.Forms.ControlGallery.Android/preAppCompat
      #     androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /p:DefineConstants="TRACE DEBUG FORMS_APPLICATION_ACTIVITY APP" /bl:$(Build.ArtifactStagingDirectory)/android-preappcompact.binlog'
      #     buildConfiguration: $(DefaultBuildConfiguration)
      #     provisionatorPath : 'provisioning/provisioning.csx'

      # - template: steps/build-android.yml
      #   parameters:
      #     name: android_fast
      #     displayName: Build Android [Fast Renderers]
      #     vmImage: $(macOSVmImage)
      #     targetFolder: Xamarin.Forms.ControlGallery.Android/newRenderers/
      #     androidProjectArguments: '/t:"Rebuild;SignAndroidPackage" /p:DefineConstants="TRACE DEBUG TEST_EXPERIMENTAL_RENDERERS APP" /bl:$(Build.ArtifactStagingDirectory)/android-newrenderers.binlog'
      #     buildConfiguration: $(DefaultBuildConfiguration)
      #     provisionatorPath : 'provisioning/provisioning.csx'

  - stage: build_osx
    displayName: Build OSX
    ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
      dependsOn: windows
    ${{ if eq(variables['System.TeamProject'], 'public') }}:
      dependsOn: []
    jobs:
      - job: osx
        displayName: OSX Phase
        pool:
          name: $(macOSVmImage)
          demands:
            - Agent.OS -equals darwin
            - sh
            - msbuild
            - Xamarin.iOS
        variables:
          provisionator.osxPath : 'provisioning/provisioning.csx'
          provisionator.signPath : 'provisioning/provisioning_sign.csx'
          buildConfiguration: $(DefaultBuildConfiguration)
          iOSCertSecureFileName: 'Xamarin Forms iOS Certificate.p12'
          iOSProvisioningSecureFileName: 'Xamarin Forms iOS Provisioning.mobileprovision'
          monoVersion : $(MONO_VERSION)
        steps:
          - template: steps/build-osx.yml

  # only sign using the private server
  - ${{ if eq(variables['System.TeamProject'], 'devdiv') }}:
    - stage: nuget_signing
      dependsOn: windows
      displayName: Sign Nuget
      jobs:
        - job: nuget_sign
          displayName: Sign Phase
          pool:
            name: $(signVmImage)
          steps:
            - template: steps/build-sign.yml
          condition: and(succeeded(), or(eq(variables['Sign'], 'true'), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'],'refs/tags/'))))


